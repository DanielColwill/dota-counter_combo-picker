[{"D:\\Coding\\dota_app\\dota_app\\src\\index.js":"1","D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\App.js":"2","D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\NavbarHeader.js":"3","D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\HeroTile.js":"4","D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\counterCombos.js":"5"},{"size":292,"mtime":1608771466658,"results":"6","hashOfConfig":"7"},{"size":2054,"mtime":1608788324213,"results":"8","hashOfConfig":"7"},{"size":852,"mtime":1608616406681,"results":"9","hashOfConfig":"7"},{"size":3131,"mtime":1608795337623,"results":"10","hashOfConfig":"7"},{"size":1904,"mtime":1608873056177,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ibqonf",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"D:\\Coding\\dota_app\\dota_app\\src\\index.js",[],["25","26"],"D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\App.js",[],"D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\NavbarHeader.js",[],"D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\HeroTile.js",["27","28"],"import React, { Component } from \"react\";\r\nimport CounterCombo from \"./counterCombos\";\r\nconst axios = require(\"axios\");\r\n\r\nclass HeroTile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      id: this.props.id,\r\n      heroName: this.props.heroName,\r\n      winrate: 0,\r\n      heroes: this.props.heroes,\r\n      open: false,\r\n    };\r\n  }\r\n\r\n\r\n  /*   componentDidMount() {\r\n    this.getWinrate();\r\n  } */\r\n\r\n  getHeroImg(name) {\r\n    var temp = name.toLowerCase();\r\n    var url = \"https://api.opendota.com/apps/dota2/images/heroes/\";\r\n    var extension = \"_full.png\";\r\n    switch (temp) {\r\n      case \"anti-mage\":\r\n        return url + \"antimage\" + extension;\r\n      case \"centaur warrunner\":\r\n        return url + \"centaur\" + extension;\r\n      case \"clockwerk\":\r\n        return url + \"rattletrap\" + extension;\r\n      case \"doom\":\r\n        return url + \"doom_bringer\" + extension;\r\n      case \"io\":\r\n        return url + \"wisp\" + extension;\r\n      case \"lifestealer\":\r\n        return url + \"life_stealer\" + extension;\r\n      case \"magnus\":\r\n        return url + \"magnataur\" + extension;\r\n      case \"nature's prophet\":\r\n        return url + \"furion\" + extension;\r\n      case \"necrophos\":\r\n        return url + \"necrolyte\" + extension;\r\n      case \"outworld destroyer\":\r\n        return url + \"obsidian_destroyer\" + extension;\r\n      case \"queen of pain\":\r\n        return url + \"queenofpain\" + extension;\r\n      case \"shadow fiend\":\r\n        return url + \"nevermore\" + extension;\r\n      case \"timbersaw\":\r\n        return url + \"shredder\" + extension;\r\n      case \"treant protector\":\r\n        return url + \"treant\" + extension;\r\n      case \"underlord\":\r\n        return url + \"abyssal_underlord\" + extension;\r\n      case \"vengeful spirit\":\r\n        return url + \"vengefulspirit\" + extension;\r\n      case \"windranger\":\r\n        return url + \"windrunner\" + extension;\r\n      case \"wraith king\":\r\n        return url + \"skeleton_king\" + extension;\r\n      case \"zeus\":\r\n        return url + \"zuus\" + extension;\r\n      default:\r\n        temp = temp.replace(/ /g, \"_\");\r\n        return url + temp + extension;\r\n    }\r\n  }\r\n  toggle() {\r\n    if (this.state.open === true) {\r\n      this.setState({\r\n        open: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        open: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <img\r\n              class=\"col-md-2\"\r\n              src={this.getHeroImg(this.props.heroName)}\r\n              alt=\"\"\r\n            ></img>\r\n            {this.props.heroName}\r\n          </td>\r\n          <td class=\"align-middle\">\r\n            {\" \"}\r\n            <a\r\n              class=\"btn btn-primary text-center align-middle\"\r\n              align=\"center\"\r\n              onClick={this.toggle}\r\n            >\r\n              Details\r\n            </a>\r\n          </td>\r\n        </tr>\r\n        {this.state.open ? (\r\n          <CounterCombo heroName={this.props.heroName} id={this.props.id} />\r\n        ) : null}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeroTile;\r\n","D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\counterCombos.js",["29"],"import React, { Component } from \"react\";\r\nconst axios = require(\"axios\");\r\n\r\nclass CounterCombo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: this.props.id,\r\n      heroName: this.props.heroName,\r\n      winrate: 0,\r\n      heroes: this.props.heroes,\r\n      matchups: [],\r\n      goodCombo:0,\r\n      betterCombo:0,\r\n      bestCombo:0,\r\n      goodCounter:0,\r\n      betterCounter:0,\r\n      bestCounter:0\r\n    };\r\n  }\r\n\r\n  getMatchups() {\r\n    axios\r\n      .get(\"http://localhost:4000/matchups/\" + this.state.id)\r\n      .then((result) => {\r\n        this.setState({\r\n          matchups: result,\r\n        });\r\n      });\r\n  }\r\n  getWinrate(){\r\n    axios\r\n    .get(\"http://localhost:4000/winrates/\" + this.state.id)\r\n    .then((result) => {\r\n      this.setState({\r\n        winrate: result.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    //this.getMatchups();\r\n    this.getWinrate()\r\n  }\r\n\r\n  getCombosCounters() {\r\n    this.setState({\r\n      goodCombo: this.state.matchups.data[0].wins / this.state.matchups.data[0].games_played,\r\n      betterCombo: this.state.matchups.data[0].wins / this.state.matchups.data[0].games_played,\r\n      bestCombo: this.state.matchups.data[0].wins / this.state.matchups.data[0].games_played\r\n    });\r\n    for (var i = 0; i < this.state.matchups.length; i++) {\r\n      if (this.state.matchups.data[i].games_played > 50) {\r\n        var temp = this.state.matchups.data[i].wins / this.state.matchups.data[i].games_played;\r\n      }\r\n\r\n    }\r\n    return \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tbody class=\"w-100 d-md-table\">\r\n        <tr>\r\n          <th>Combos</th>\r\n          <th>Counters</th>\r\n          <th>Winrate</th>\r\n        </tr>\r\n        <tr>\r\n          <td>TEST</td>\r\n          <td>TEST</td>\r\n          <td>{this.state.winrate}</td>\r\n        </tr>\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CounterCombo;\r\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":3,"column":7,"nodeType":"36","messageId":"37","endLine":3,"endColumn":12},{"ruleId":"38","severity":1,"message":"39","line":97,"column":13,"nodeType":"40","endLine":101,"endColumn":14},{"ruleId":"34","severity":1,"message":"41","line":54,"column":13,"nodeType":"36","messageId":"37","endLine":54,"endColumn":17},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'axios' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'temp' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]