[{"D:\\Coding\\dota_app\\dota_app\\src\\index.js":"1","D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\App.js":"2","D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\NavbarHeader.js":"3","D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\HeroTile.js":"4","D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\counterCombos.js":"5"},{"size":292,"mtime":1608771466658,"results":"6","hashOfConfig":"7"},{"size":2031,"mtime":1608771788439,"results":"8","hashOfConfig":"7"},{"size":852,"mtime":1608616406681,"results":"9","hashOfConfig":"7"},{"size":3275,"mtime":1608773934628,"results":"10","hashOfConfig":"7"},{"size":1039,"mtime":1608774443800,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ibqonf",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Coding\\dota_app\\dota_app\\src\\index.js",[],["24","25"],"D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\App.js",[],"D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\NavbarHeader.js",[],"D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\HeroTile.js",["26","27"],"import React, { Component } from \"react\";\r\nimport CounterCombo from \"./counterCombos\";\r\nconst axios = require(\"axios\");\r\n\r\nclass HeroTile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      id: this.props.id,\r\n      heroName: this.props.heroName,\r\n      winrate: 0,\r\n      heroes: this.props.heroes,\r\n      open: false,\r\n    };\r\n  }\r\n\r\n  getWinrate(id) {\r\n    axios.get(\"http://localhost:4000/winrates/\" + this.state.id).then((result) => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  /*   componentDidMount() {\r\n    this.getWinrate();\r\n  } */\r\n\r\n  getHeroImg(name) {\r\n    var temp = name.toLowerCase();\r\n    var url = \"https://api.opendota.com/apps/dota2/images/heroes/\";\r\n    var extension = \"_full.png\";\r\n    switch (temp) {\r\n      case \"anti-mage\":\r\n        return url + \"antimage\" + extension;\r\n      case \"centaur warrunner\":\r\n        return url + \"centaur\" + extension;\r\n      case \"clockwerk\":\r\n        return url + \"rattletrap\" + extension;\r\n      case \"doom\":\r\n        return url + \"doom_bringer\" + extension;\r\n      case \"io\":\r\n        return url + \"wisp\" + extension;\r\n      case \"lifestealer\":\r\n        return url + \"life_stealer\" + extension;\r\n      case \"magnus\":\r\n        return url + \"magnataur\" + extension;\r\n      case \"nature's prophet\":\r\n        return url + \"furion\" + extension;\r\n      case \"necrophos\":\r\n        return url + \"necrolyte\" + extension;\r\n      case \"outworld destroyer\":\r\n        return url + \"obsidian_destroyer\" + extension;\r\n      case \"queen of pain\":\r\n        return url + \"queenofpain\" + extension;\r\n      case \"shadow fiend\":\r\n        return url + \"nevermore\" + extension;\r\n      case \"timbersaw\":\r\n        return url + \"shredder\" + extension;\r\n      case \"treant protector\":\r\n        return url + \"treant\" + extension;\r\n      case \"underlord\":\r\n        return url + \"abyssal_underlord\" + extension;\r\n      case \"vengeful spirit\":\r\n        return url + \"vengefulspirit\" + extension;\r\n      case \"windranger\":\r\n        return url + \"windrunner\" + extension;\r\n      case \"wraith king\":\r\n        return url + \"skeleton_king\" + extension;\r\n      case \"zeus\":\r\n        return url + \"zuus\" + extension;\r\n      default:\r\n        temp = temp.replace(/ /g, \"_\");\r\n        return url + temp + extension;\r\n    }\r\n  }\r\n  toggle() {\r\n    if (this.state.open === true) {\r\n      this.setState({\r\n        open: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        open: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tbody>\r\n        <td>\r\n          <img\r\n            class=\"col-md-2\"\r\n            src={this.getHeroImg(this.props.heroName)}\r\n            alt=\"\"\r\n          ></img>\r\n          {this.props.heroName}\r\n        </td>\r\n        <td class=\"align-middle\">\r\n          {\" \"}\r\n          <a\r\n            scope=\"row\"\r\n            class=\"btn btn-primary text-center align-middle\"\r\n            align=\"center\"\r\n            onClick={this.toggle}\r\n          >\r\n            Details\r\n          </a>\r\n        </td>\r\n        {this.state.open ? (\r\n          <CounterCombo\r\n            heroName={this.props.heroName}\r\n            id={this.props.id}\r\n          />\r\n        ) : null}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeroTile;\r\n","D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\counterCombos.js",["28","29","30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":101,"column":11,"nodeType":"37","endLine":106,"endColumn":12},{"ruleId":"38","severity":1,"message":"39","line":102,"column":13,"nodeType":"40","endLine":102,"endColumn":24},{"ruleId":"38","severity":1,"message":"39","line":38,"column":15,"nodeType":"40","endLine":38,"endColumn":26},{"ruleId":"38","severity":1,"message":"39","line":39,"column":15,"nodeType":"40","endLine":39,"endColumn":26},{"ruleId":"38","severity":1,"message":"39","line":40,"column":15,"nodeType":"40","endLine":40,"endColumn":26},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","no-global-assign","no-unsafe-negation"]