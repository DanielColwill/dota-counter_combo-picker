[{"D:\\Coding\\dota_app\\dota_app\\src\\index.js":"1","D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\App.js":"2","D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\NavbarHeader.js":"3","D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\HeroTile.js":"4","D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\counterCombos.js":"5","D:\\Coding\\dota_app\\dota_app\\src\\api\\routes\\heroes.js":"6"},{"size":266,"mtime":1608953745958,"results":"7","hashOfConfig":"8"},{"size":3691,"mtime":1608958025586,"results":"9","hashOfConfig":"8"},{"size":1091,"mtime":1608953805427,"results":"10","hashOfConfig":"8"},{"size":2902,"mtime":1608958035437,"results":"11","hashOfConfig":"8"},{"size":4058,"mtime":1609202842608,"results":"12","hashOfConfig":"8"},{"size":391,"mtime":1608685815066,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"ibqonf",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"17"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"D:\\Coding\\dota_app\\dota_app\\src\\index.js",["32"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./client/components/App\";\r\nimport NavbarHeader from \"./client/components/NavbarHeader\";\r\n\r\n\r\nReactDOM.render(\r\n  <div>\r\n    <App/>,\r\n  </div>,\r\n \r\n  document.getElementById(\"root\")\r\n);\r\n",["33","34"],"D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\App.js",["35","36","37"],"import React, { Component } from \"react\";\r\nimport HeroTile from \"./HeroTile\";\r\nimport { Navbar, Nav, Form, FormControl, Button } from \"react-bootstrap\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.sortAlpha = this.sortAlpha.bind(this);\r\n    this.sortByKey = this.sortByKey.bind(this);\r\n    this.renderHeroes = this.renderHeroes.bind(this);\r\n    this.updateSearch = this.updateSearch.bind(this);\r\n    this.state = {\r\n      heroes: [],\r\n      heroName: \"\",\r\n      id: 0,\r\n      search: \"\",\r\n    };\r\n  }\r\n\r\n  getHeroes() {\r\n    axios.get(\"http://localhost:4000/heroes\").then((result) => {\r\n      this.setState({\r\n        heroes: result.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getHeroes();\r\n    this.sortAlpha();\r\n    //this.addSearchListener();\r\n  }\r\n\r\n  sortByKey(array, key) {\r\n    return array.sort(function (a, b) {\r\n      var x = a[key];\r\n      var y = b[key];\r\n      return x < y ? -1 : x > y ? 1 : 0;\r\n    });\r\n  }\r\n\r\n  sortAlpha() {\r\n    this.setState({\r\n      heroes: this.sortByKey(this.state.heroes, \"localized_name\"),\r\n    });\r\n  }\r\n\r\n  renderHeroes() {\r\n    var list = [];\r\n    if (this.state.search.length === 0) {\r\n      {\r\n        return this.state.heroes.map((hero, id) => {\r\n          return <HeroTile heroes={this.state.heroes} heroName={hero.localized_name} id={hero.id} />;\r\n        });\r\n      }\r\n    } else if (this.state.search.length > 0) {\r\n      for (var i = 0; i < this.state.heroes.length; i++) {\r\n        if (\r\n          this.state.heroes[i].localized_name\r\n            .toLowerCase()\r\n            .includes(this.state.search)\r\n        ) {\r\n          list.push(this.state.heroes[i]);\r\n        }\r\n      }\r\n      {\r\n        return list.map((hero, id) => {\r\n          return <HeroTile heroes={this.state.heroes} heroName={hero.localized_name} id={hero.id} />;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  updateSearch (event){\r\n    this.setState({\r\n      search:event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand href=\"/\">\r\n            Dota App\r\n            <img\r\n              src=\"https://1000logos.net/wp-content/uploads/2019/03/Dota-2-Logo.png\"\r\n              align=\"middle\"\r\n              height=\"30\"\r\n              alt=\"\"\r\n            ></img>\r\n          </Navbar.Brand>\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n          </Nav>\r\n          <Form inline>\r\n            <FormControl\r\n              onChange={this.updateSearch}\r\n              value={this.state.search}\r\n              is=\"searchBar\"\r\n              id=\"searchBar\"\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              className=\"mr-sm-2\"\r\n            />\r\n          </Form>\r\n        </Navbar>\r\n        <div class=\"pt-5 container h-100\">\r\n          <div class=\"row h-25 align-items-center\">\r\n            <div class=\"col-sm-1\"></div>\r\n            {/* content */}\r\n            <div class=\"table-responsive\">\r\n              <table\r\n                class=\"table table-hover table-dark w-100 d-block d-md-table\"\r\n                id=\"heroTable\"\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th class=\"pl-4\" onClick={this.sortAlpha} scope=\"col\">\r\n                      Heroes\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n\r\n                {this.state.heroes.length > 0 ? this.renderHeroes() : null}\r\n\r\n              </table>\r\n            </div>\r\n            <div class=\"col-sm-1\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\NavbarHeader.js",[],"D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\HeroTile.js",["38"],"import React, { Component } from \"react\";\r\nimport CounterCombo from \"./counterCombos\";\r\nconst axios = require(\"axios\");\r\n\r\nclass HeroTile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      id: this.props.id,\r\n      heroName: this.props.heroName,\r\n      winrate: 0,\r\n      heroes: this.props.heroes,\r\n      open: false,\r\n    };\r\n  }\r\n\r\n  /*   componentDidMount() {\r\n    this.getWinrate();\r\n  } */\r\n\r\n  getHeroImg(name) {\r\n    var temp = name.toLowerCase();\r\n    var url = \"https://api.opendota.com/apps/dota2/images/heroes/\";\r\n    var extension = \"_full.png\";\r\n    switch (temp) {\r\n      case \"anti-mage\":\r\n        return url + \"antimage\" + extension;\r\n      case \"centaur warrunner\":\r\n        return url + \"centaur\" + extension;\r\n      case \"clockwerk\":\r\n        return url + \"rattletrap\" + extension;\r\n      case \"doom\":\r\n        return url + \"doom_bringer\" + extension;\r\n      case \"io\":\r\n        return url + \"wisp\" + extension;\r\n      case \"lifestealer\":\r\n        return url + \"life_stealer\" + extension;\r\n      case \"magnus\":\r\n        return url + \"magnataur\" + extension;\r\n      case \"nature's prophet\":\r\n        return url + \"furion\" + extension;\r\n      case \"necrophos\":\r\n        return url + \"necrolyte\" + extension;\r\n      case \"outworld destroyer\":\r\n        return url + \"obsidian_destroyer\" + extension;\r\n      case \"queen of pain\":\r\n        return url + \"queenofpain\" + extension;\r\n      case \"shadow fiend\":\r\n        return url + \"nevermore\" + extension;\r\n      case \"timbersaw\":\r\n        return url + \"shredder\" + extension;\r\n      case \"treant protector\":\r\n        return url + \"treant\" + extension;\r\n      case \"underlord\":\r\n        return url + \"abyssal_underlord\" + extension;\r\n      case \"vengeful spirit\":\r\n        return url + \"vengefulspirit\" + extension;\r\n      case \"windranger\":\r\n        return url + \"windrunner\" + extension;\r\n      case \"wraith king\":\r\n        return url + \"skeleton_king\" + extension;\r\n      case \"zeus\":\r\n        return url + \"zuus\" + extension;\r\n      default:\r\n        temp = temp.replace(/ /g, \"_\");\r\n        return url + temp + extension;\r\n    }\r\n  }\r\n  toggle() {\r\n    if (this.state.open === true) {\r\n      this.setState({\r\n        open: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        open: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tbody onClick={this.toggle}>\r\n        <tr>\r\n          <td>\r\n            <img\r\n              class=\"col-md-2\"\r\n              src={this.getHeroImg(this.props.heroName)}\r\n              alt=\"\"\r\n            ></img>\r\n            {this.props.heroName}\r\n          </td>\r\n        </tr>\r\n        {this.state.open ? (\r\n          <CounterCombo heroes={this.props.heroes} heroName={this.props.heroName} id={this.props.id} />\r\n        ) : null}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeroTile;\r\n","D:\\Coding\\dota_app\\dota_app\\src\\client\\components\\counterCombos.js",["39"],"import React, { Component } from \"react\";\r\nimport HeroTile from \"./HeroTile\";\r\nconst axios = require(\"axios\");\r\n\r\nclass CounterCombo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: this.props.id,\r\n      heroName: this.props.heroName,\r\n      winrate: 0,\r\n      heroes: this.props.heroes,\r\n      matchups: [],\r\n      goodCombo: 0,\r\n      betterCombo: 0,\r\n      bestCombo: 0,\r\n      goodCounter: 0,\r\n      betterCounter: 0,\r\n      bestCounter: 0,\r\n    };\r\n  }\r\n\r\n  getMatchups() {\r\n    axios\r\n      .get(\"http://localhost:4000/matchups/\" + this.state.id)\r\n      .then((result) => {\r\n        this.setState({\r\n          matchups: result.data,\r\n        });\r\n      });\r\n  }\r\n  getWinrate() {\r\n    axios\r\n      .get(\"http://localhost:4000/winrates/\" + this.state.id)\r\n      .then((result) => {\r\n        this.setState({\r\n          winrate: result.data,\r\n        });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMatchups();\r\n    this.getWinrate();\r\n  }\r\n\r\n  sortByKey(array, key) {\r\n    return array.sort(function (a, b) {\r\n      var x = a[key];\r\n      var y = b[key];\r\n      return x < y ? -1 : x > y ? 1 : 0;\r\n    });\r\n  }\r\n\r\n  getCombos() {\r\n    var combos = [\r\n      { id: \"\", winrate: 0 },\r\n      { id: \"\", winrate: 0 },\r\n      { id: \"\", winrate: 0 },\r\n    ];\r\n    for (var i = 0; i < this.state.matchups.length; i++) {\r\n      if (this.state.matchups[i].games_played > 50) {\r\n        var temp =\r\n          this.state.matchups[i].wins / this.state.matchups[i].games_played;\r\n        if (temp > combos[combos.length - 1].winrate) {\r\n          combos.push({ id: this.state.matchups[i].hero_id, winrate: temp });\r\n        }\r\n      }\r\n    }\r\n    combos.splice(0, combos.length - 3);\r\n    return combos;\r\n  }\r\n\r\n  getCounters() {\r\n    var counters = [\r\n      { id: \"\", winrate: 1 },\r\n      { id: \"\", winrate: 1 },\r\n      { id: \"\", winrate: 1 },\r\n    ];\r\n    for (var i = 0; i < this.state.matchups.length; i++) {\r\n      console.log(this.state.matchups[i]);\r\n      if (this.state.matchups[i].games_played > 10) {\r\n        var temp =\r\n          this.state.matchups[i].wins / this.state.matchups[i].games_played;\r\n        if (temp < counters[0].winrate) {\r\n          counters.unshift({\r\n            id: this.state.matchups[i].hero_id,\r\n            winrate: temp,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    counters.splice(3, counters.length);\r\n    return counters;\r\n  }\r\n\r\n  render() {\r\n    var tempCombo = this.getCombos();\r\n    var tempCounter = this.getCounters();\r\n    return (\r\n      <tbody class=\"w-100 d-md-table \">\r\n        <tr>\r\n          <th class=\"text-center\">Good Against</th>\r\n          <th class=\"text-center\">Countered By</th>\r\n          <th class=\"text-center\">Winrate</th>\r\n        </tr>\r\n        <tr>\r\n          <td class=\"border-0\">\r\n            {tempCombo.map((index) => {\r\n              var name;\r\n              for (var i = 0; i < this.props.heroes.length; i++) {\r\n                if (this.props.heroes[i].id === index.id) {\r\n                  name = this.props.heroes[i].localized_name;\r\n                }\r\n              }\r\n              if (name !== undefined) {\r\n                return <HeroTile heroName={name} id={index.id} />;\r\n              }\r\n            })}\r\n          </td>\r\n          <td class=\"border-0\">\r\n            {this.props.heroes[tempCounter[0].id] !== undefined\r\n              ? tempCounter.map((index) => {\r\n                  var name;\r\n\r\n                  for (var i = 0; i < this.props.heroes.length; i++) {\r\n                    if (this.props.heroes[i].id === index.id) {\r\n                      console.log(this.props.heroes[i]);\r\n                      name = this.props.heroes[i].localized_name;\r\n                    }\r\n                  }\r\n\r\n                  return <HeroTile heroName={name} id={index.id} />;\r\n                })\r\n              : null}\r\n          </td>\r\n          <td class=\"border-0 text-center align-middle\">\r\n            {this.state.winrate}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CounterCombo;\r\n","D:\\Coding\\dota_app\\dota_app\\src\\api\\routes\\heroes.js",[],["40","41"],{"ruleId":"42","severity":1,"message":"43","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":20},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"42","severity":1,"message":"50","line":3,"column":42,"nodeType":"44","messageId":"45","endLine":3,"endColumn":48},{"ruleId":"51","severity":1,"message":"52","line":53,"column":7,"nodeType":"53","messageId":"54","endLine":57,"endColumn":8},{"ruleId":"51","severity":1,"message":"52","line":68,"column":7,"nodeType":"53","messageId":"54","endLine":72,"endColumn":8},{"ruleId":"42","severity":1,"message":"55","line":3,"column":7,"nodeType":"44","messageId":"45","endLine":3,"endColumn":12},{"ruleId":"56","severity":1,"message":"57","line":110,"column":36,"nodeType":"58","messageId":"59","endLine":110,"endColumn":38},{"ruleId":"46","replacedBy":"60"},{"ruleId":"48","replacedBy":"61"},"no-unused-vars","'NavbarHeader' is defined but never used.","Identifier","unusedVar","no-native-reassign",["62"],"no-negated-in-lhs",["63"],"'Button' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'axios' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["62"],["63"],"no-global-assign","no-unsafe-negation"]